use strict;
use warnings;
use Test::More tests => 344;
BEGIN { use_ok('Math::SimpleHisto::XS') };

use lib 't/lib', 'lib';
use Test_Functions;

my $bins = [];
my $x = 2.1;
my $n = 10;
push @$bins, sprintf("%.1f", $x+=$x/$_) for 1..$n+1;
my $h = Math::SimpleHisto::XS->new(bins => $bins);
isa_ok($h, 'Math::SimpleHisto::XS');

is_deeply($h->bin_lower_boundaries(), [map 0+$_, @{$bins}[0..$n-1]], 'lower boundaries okay');
is_deeply($h->bin_upper_boundaries(), [map 0+$_, @{$bins}[1..$n]], 'upper boundaries okay');
is_deeply($h->bin_centers(), [map {0.5*($bins->[$_]+$bins->[$_+1])} 0..$n-1], 'bin centers okay');

foreach my $i (0..$n-1) {
  is_approx($h->bin_lower_boundary($i), $bins->[$i], "lower boundary bin $i");
  is_approx($h->bin_upper_boundary($i), $bins->[$i+1], "upper boundary bin $i");
  is_approx($h->bin_center($i), 0.5*($bins->[$i]+$bins->[$i+1]), "bin center $i");
}

#diag(join(" ", @$bins));
is($h->find_bin($bins->[0]), 0, "find_bin min");
is($h->find_bin($bins->[-1]), undef, "find_bin max");
is($h->find_bin($bins->[-1]-1e-2), $n-1, "find_bin max-eps");
is($h->find_bin(0.5*($bins->[3]+$bins->[4])), 3, "find_bin some bin center");

is($h->find_bin(21), 8, "find_bin x=21 => ibin=8");

#my @t;
#for (1..1000) {
#  my $ibin = int(rand($n));
#  my $x = $bins->[$ibin] + ((rand() < 0.01) ? 0. : rand($bins->[$ibin+1]-$bins->[$ibin]));
#  is($h->find_bin($x), $ibin, "find_bin: $x ==> $ibin");
#  push @t, [$x, $ibin];
#}
#print "[qw(@$_)],\n" for @t;

my @tests = (
  [qw(21.5300051946957 8)],
  [qw(23.1 9)],
  [qw(19.7411354842682 7)],
  [qw(18.6878835266225 6)],
  [qw(23.8972735361547 9)],
  [qw(15.4095905076324 5)],
  [qw(20.5184622603176 7)],
  [qw(20.5076673136554 7)],
  [qw(24.6393243048754 9)],
  [qw(7.22094555804201 1)],
  [qw(9.70258097757372 2)],
  [qw(18.7812156474824 6)],
  [qw(24.9270609110801 9)],
  [qw(4.7475100249957 0)],
  [qw(6.73480915112459 1)],
  [qw(24.5091985994917 9)],
  [qw(24.930334053538 9)],
  [qw(10.957244040293 3)],
  [qw(20.0994142935579 7)],
  [qw(22.2486601013684 8)],
  [qw(8.26144057364565 1)],
  [qw(7.19162617784584 1)],
  [qw(9.53892370725272 2)],
  [qw(8.41714193598461 2)],
  [qw(24.8877896185547 9)],
  [qw(12.3282350642647 3)],
  [qw(10.9652902533116 3)],
  [qw(19.8140750105956 7)],
  [qw(24.1842367578503 9)],
  [qw(15.7175070103656 5)],
  [qw(19.4750139153644 7)],
  [qw(15.8388595041028 5)],
  [qw(22.9925572480484 8)],
  [qw(10.2624743806611 2)],
  [qw(5.02673134524658 0)],
  [qw(20.4507098533102 7)],
  [qw(20.7627993077563 7)],
  [qw(10.3389900557168 2)],
  [qw(12.0678041475025 3)],
  [qw(5.79646732837951 0)],
  [qw(8.30278452672125 1)],
  [qw(10.9118370953057 3)],
  [qw(6.00215908703337 0)],
  [qw(18.0468579263298 6)],
  [qw(15.0571217904105 5)],
  [qw(6.36547910983171 1)],
  [qw(25.1798448452471 9)],
  [qw(19.5952097646701 7)],
  [qw(15.6422772644878 5)],
  [qw(23.2742329247588 9)],
  [qw(6.89394306103107 1)],
  [qw(18.6249928663635 6)],
  [qw(10.9381874568196 3)],
  [qw(14.6084854090436 4)],
  [qw(6.28176633000253 0)],
  [qw(20.281693473536 7)],
  [qw(19.8554940647035 7)],
  [qw(15.4453128650525 5)],
  [qw(5.81354025504569 0)],
  [qw(13.0519105919168 4)],
  [qw(6.97878462812618 1)],
  [qw(7.99351367542316 1)],
  [qw(18.2865356993738 6)],
  [qw(24.3680276321848 9)],
  [qw(12.5154958522628 3)],
  [qw(13.8855900030337 4)],
  [qw(13.7291137465028 4)],
  [qw(23.3036675594363 9)],
  [qw(24.5348182403843 9)],
  [qw(23.849506774939 9)],
  [qw(10.4152796758443 2)],
  [qw(9.28512416914523 2)],
  [qw(12.8556602980903 4)],
  [qw(18.5789479810581 6)],
  [qw(11.3337111743704 3)],
  [qw(19.3222507584981 7)],
  [qw(9.77430443758405 2)],
  [qw(17.5360510148083 6)],
  [qw(22.7881151802152 8)],
  [qw(20.9124938371081 7)],
  [qw(4.61481873279776 0)],
  [qw(23.7699364070275 9)],
  [qw(10.2001498494179 2)],
  [qw(15.8209344020959 5)],
  [qw(13.8347702588225 4)],
  [qw(24.4284073876558 9)],
  [qw(11.8686833085181 3)],
  [qw(4.91283097061209 0)],
  [qw(13.5386957985309 4)],
  [qw(14.1005532830118 4)],
  [qw(21.6161967596474 8)],
  [qw(21.1621727993316 8)],
  [qw(4.39769062176973 0)],
  [qw(5.21217235134747 0)],
  [qw(23.1357112973615 9)],
  [qw(7.47751180650361 1)],
  [qw(5.16812974427959 0)],
  [qw(6.32239030694872 1)],
  [qw(19.380448133983 7)],
  [qw(21.0456484290652 8)],
  [qw(14.4608799608288 4)],
  [qw(11.4429850146163 3)],
  [qw(12.9089309689215 4)],
  [qw(5.76383827635194 0)],
  [qw(5.26652392617447 0)],
  [qw(17.2370676831629 6)],
  [qw(14.1855046335537 4)],
  [qw(21.7047387643269 8)],
  [qw(20.5664160346372 7)],
  [qw(14.3021858798483 4)],
  [qw(10.2200610530392 2)],
  [qw(21.4764412112477 8)],
  [qw(13.8953277305434 4)],
  [qw(8.81681085869708 2)],
  [qw(4.72060464615698 0)],
  [qw(22.6171849285468 8)],
  [qw(7.4027085738095 1)],
  [qw(13.4266955756441 4)],
  [qw(18.3923146901336 6)],
  [qw(12.9137139306653 4)],
  [qw(6.73706779375163 1)],
  [qw(11.477822383697 3)],
  [qw(22.8908195657374 8)],
  [qw(17.4901397959079 6)],
  [qw(10.9447355960683 3)],
  [qw(10.5106202930248 3)],
  [qw(17.4740223248931 6)],
  [qw(22.7654792183188 8)],
  [qw(8.69054804909861 2)],
  [qw(19.1217778753423 7)],
  [qw(17.1742313449679 6)],
  [qw(7.88104267937462 1)],
  [qw(20.3262553721629 7)],
  [qw(18.9672039203994 7)],
  [qw(24.5634641069547 9)],
  [qw(14.6102997191908 4)],
  [qw(6.42230978729538 1)],
  [qw(20.5253258460662 7)],
  [qw(8.62220401526782 2)],
  [qw(5.66391228120434 0)],
  [qw(7.95196218222344 1)],
  [qw(25.102735153659 9)],
  [qw(10.0628848210336 2)],
  [qw(21.3199238231641 8)],
  [qw(14.6522905732955 4)],
  [qw(22.3438969380552 8)],
  [qw(6.95092727484575 1)],
  [qw(10.4456691119945 2)],
  [qw(4.25608915844966 0)],
  [qw(24.1888811390179 9)],
  [qw(7.60991827521199 1)],
  [qw(25.0343161319361 9)],
  [qw(20.7798435185034 7)],
  [qw(19.4044288872719 7)],
  [qw(8.37485165160097 1)],
  [qw(20.0789931155709 7)],
  [qw(22.8968716662821 8)],
  [qw(17.2266574874659 6)],
  [qw(21.9542769823503 8)],
  [qw(15.2235536371447 5)],
  [qw(23.718876063633 9)],
  [qw(23.6917893214924 9)],
  [qw(21.8944511539711 8)],
  [qw(25.1069917682723 9)],
  [qw(9.2435698324542 2)],
  [qw(19.4738577809517 7)],
  [qw(11.9765668758302 3)],
  [qw(18.402575768887 6)],
  [qw(13.0078400837407 4)],
  [qw(8.285729278101 1)],
  [qw(4.97194072906088 0)],
  [qw(23.0105984524346 8)],
  [qw(6.56440898457461 1)],
  [qw(19.5582539716618 7)],
  [qw(12.1844657070906 3)],
  [qw(8.91135850505862 2)],
  [qw(21.691652783206 8)],
  [qw(19.079126108634 7)],
  [qw(7.20914225363875 1)],
  [qw(6.41214043513073 1)],
  [qw(21.8598319231366 8)],
  [qw(17.8212423570147 6)],
  [qw(18.9692576786686 7)],
  [qw(24.4165397631949 9)],
  [qw(6.03835050468278 0)],
  [qw(18.704075218315 6)],
  [qw(12.3816341898363 3)],
  [qw(11.0179103144703 3)],
  [qw(18.7058671031046 6)],
  [qw(4.23084809423543 0)],
  [qw(25.1628457727044 9)],
  [qw(6.2308553277424 0)],
  [qw(6.15337523229484 0)],
  [qw(13.110065870074 4)],
  [qw(5.18263644363769 0)],
  [qw(5.15884432701358 0)],
  [qw(14.3772019584752 4)],
  [qw(17.7691144996296 6)],
  [qw(11.7018671411232 3)],
  [qw(19.4839515969418 7)],
  [qw(7.88886622559981 1)],
  [qw(23.9780270637922 9)],
  [qw(11.0887733704934 3)],
  [qw(11.5115554411046 3)],
  [qw(19.4087107594616 7)],
  [qw(11.1368916589221 3)],
  [qw(24.4814158299537 9)],
  [qw(12.0122234647503 3)],
  [qw(7.41417687709381 1)],
  [qw(16.6154552827647 5)],
  [qw(8.47792427864617 2)],
  [qw(14.6519886921786 4)],
  [qw(23.1277215481996 9)],
  [qw(4.32890215627949 0)],
  [qw(10.3661310164945 2)],
  [qw(23.5662826844844 9)],
  [qw(8.51705954228103 2)],
  [qw(5.46113668062364 0)],
  [qw(21.6068121870034 8)],
  [qw(23.0108607473474 8)],
  [qw(18.8472168551243 6)],
  [qw(6.01370001088168 0)],
  [qw(23.9210378442891 9)],
  [qw(21.7624940921121 8)],
  [qw(20.1425587475814 7)],
  [qw(21.5331520632134 8)],
  [qw(23.0927980006426 8)],
  [qw(12.5638152178185 3)],
  [qw(17.3524480544146 6)],
  [qw(24.7067521911616 9)],
  [qw(9.82853184712135 2)],
  [qw(15.029724098375 5)],
  [qw(13.8486258376 4)],
  [qw(19.3809038011611 7)],
  [qw(25.1405386732866 9)],
  [qw(9.29986976895182 2)],
  [qw(7.84010337315531 1)],
  [qw(17.7503603580787 6)],
  [qw(18.4712768594907 6)],
  [qw(13.2240278901686 4)],
  [qw(14.2638157795308 4)],
  [qw(22.8508295901326 8)],
  [qw(13.5097343323323 4)],
  [qw(14.8692506090095 5)],
  [qw(7.08020472511451 1)],
  [qw(23.3115037700445 9)],
  [qw(18.7835402172799 6)],
  [qw(9.3024588128619 2)],
  [qw(20.1731494987202 7)],
  [qw(6.64626875701907 1)],
  [qw(12.1351307482717 3)],
  [qw(7.81610446890228 1)],
  [qw(24.5663186962851 9)],
  [qw(19.1779225633665 7)],
  [qw(16.7056179585749 5)],
  [qw(19.1625154364854 7)],
  [qw(5.23332277566087 0)],
  [qw(12.9546225915432 4)],
  [qw(18.3842599365891 6)],
  [qw(15.5528477164888 5)],
  [qw(9.59945216558813 2)],
  [qw(5.17387390332845 0)],
  [qw(18.0175066408484 6)],
  [qw(17.6659488399668 6)],
  [qw(4.82791539094199 0)],
  [qw(20.9295009640298 7)],
  [qw(13.6720930864707 4)],
  [qw(5.73105678023077 0)],
  [qw(24.5151632003878 9)],
  [qw(7.32998178227372 1)],
  [qw(14.3788572969675 4)],
  [qw(16.8747346788451 6)],
  [qw(21.5171018609279 8)],
  [qw(12.8519732713312 4)],
  [qw(11.6448464169138 3)],
  [qw(9.70882358825989 2)],
  [qw(11.2119530227146 3)],
  [qw(20.1264645223088 7)],
  [qw(6.56250095873766 1)],
  [qw(10.4329716331412 2)],
  [qw(13.814587763189 4)],
  [qw(7.35334253415085 1)],
  [qw(17.3976219670695 6)],
  [qw(16.806394260161 6)],
  [qw(17.1719149983471 6)],
  [qw(10.9857623214947 3)],
  [qw(12.1384640829417 3)],
  [qw(8.83129986331711 2)],
  [qw(15.5370933069582 5)],
  [qw(7.86203725025672 1)],
  [qw(21.002381733907 8)],
  [qw(10.4806788200255 2)],
  [qw(21.5819017571493 8)],
  [qw(17.1192004636426 6)],
  [qw(11.0443961210872 3)],
  [qw(15.5901401335003 5)],
  [qw(15.9186784601364 5)],
  [qw(16.0392663893265 5)],
  [qw(22.9939449765338 8)],
  [qw(24.0348642305808 9)],
  [qw(5.26513170931282 0)],
  [qw(16.3328120930821 5)],
  [qw(6.46671038032167 1)],
  [qw(18.394636292406 6)],
);
for (@tests) {
  my ($x, $ibin) = @$_;
  is($h->find_bin($x), $ibin, "find_bin: $x ==> $ibin");
}
